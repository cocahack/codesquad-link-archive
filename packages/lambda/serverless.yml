service:
  name: codesquad-link-archive
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'yarn'
    excludeFiles: src/**/*.test.js

  channelTableName: ${self:provider.stage}-channels
  userTableName: ${self:provider.stage}-users
  linkTableName: ${self:provider.stage}-links

  dynamodb:
    stages:
      - dev
      - test
    start:
      port: 8000
      inMemory: true
      migrate: true
      sharedDb: true

plugins:
  - serverless-jest-plugin
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-dotenv-plugin
  - serverless-plugin-monorepo
  - serverless-local-schedule

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION}
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:provider.stage}
    SLACK_TOKEN: ${env:SLACK_TOKEN}
    REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:BatchGetItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"

package:
  individually: true

functions:
  crawler:
    handler: src/crawler/index.crawl
    timeout: 20
    events:
      - schedule:
          rate: cron(0 4 * * ? *)
          timezone: Asia/Seoul

resources:
  - ${file(resources/dynamodb-table.yml)}
